process EDAClient = {
  include "FWCore/MessageLogger/data/MessageLogger.cfi"

  source = PoolSource {
    untracked vstring fileNames = {
      '/store/data/Global/A/000/000/000/RAW/0000/26FE3F69-90EB-DC11-B52C-001617C3B614.root', # run 37220 
      '/store/data/Global/A/000/000/000/RAW/0000/CC5E0A5F-A1EB-DC11-8FFF-001617C3B5D6.root', # run 37266 
      '/store/data/Global/A/000/000/000/RAW/0000/C614E19B-A1EB-DC11-995D-000423D6CAF2.root', # run 37283 
      '/store/data/Global/A/000/000/000/RAW/0000/687A5180-A9EB-DC11-98E3-001617E30D54.root', # run 37292 
      '/store/data/Global/A/000/000/000/RAW/0000/DA210284-A9EB-DC11-89C7-001617C3B652.root', # run 37298 
      '/store/data/Global/A/000/000/000/RAW/0000/F0D28584-A9EB-DC11-9F71-001617C3B614.root'  # run 37308 
    }
    untracked uint32 debugVebosity = 10
    untracked bool debugFlag = true
  }
  untracked PSet maxEvents = { untracked int32 input = -1 }

  # include "IORawData/SiPixelInputSources/data/PixelSLinkDataInputSource.cfi"
  # replace PixelSLinkDataInputSource.fileNames = { "filename.dmp" }

  include "CondTools/SiPixel/data/SiPixelCalibConfiguration.cfi"
  replace sipixelcalib_essource.toGet = { 
    { string record = "SiPixelFedCablingMapRcd"  string tag = "SiPixelFedCablingMap_v9" }
  }
  include "EventFilter/SiPixelRawToDigi/data/SiPixelRawToDigi.cfi"
  replace siPixelDigis.InputLabel = "source"

  service = AdaptorConfig {}

  include "MagneticField/Engine/data/volumeBasedMagneticField.cfi"
  
  include "Geometry/TrackerSimData/data/trackerSimGeometryXML.cfi"
  include "Geometry/TrackerGeometryBuilder/data/trackerGeometry.cfi"
  include "Geometry/TrackerNumberingBuilder/data/trackerNumberingGeometry.cfi"

  include "RecoLocalTracker/SiStripRecHitConverter/data/StripCPEfromTrackAngle.cfi"
  
  # include "RecoLocalTracker/SiPixelClusterizer/data/SiPixelClusterizer.cfi"
  # include "RecoLocalTracker/SiPixelRecHits/data/SiPixelRecHits.cfi"

  # include "RecoLocalTracker/SiStripClusterizer/data/SiStripClusterizer_SimData.cfi"
  # replace SiStripNoiseServiceParameters.UseCalibDataFromDB = false
  # include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitConverter.cfi"
  # # include "RecoLocalTracker/SiStripRecHitConverter/data/SiStripRecHitMatcher.cfi"
  
  # include "RecoTracker/TkSeedGenerator/data/GlobalMixedSeeds.cff"
  
  # include "RecoTracker/CkfPattern/data/CkfTrackCandidates.cff"
  # include "RecoTracker/TrackProducer/data/CTFFinalFitAnalytical.cff"
  # include "RecoTracker/TrackProducer/data/CTFFinalFitWithMaterial.cff"

  # include "DQM/TrackerMonitorTrack/data/MonitorTrackGlobal.cfi"
  # replace MonitorTrackGlobal.TrackProducer = "ctfWithMaterialTracks"

  # validation
  # include "Validation/RecoTrack/data/SiPixelTrackingRecHitsValid.cfi"

  # module EventContentAnalyzer = EventContentAnalyzer {}

  include "DQM/SiPixelMonitorRawData/data/SiPixelMonitorRawData.cfi"

  include "DQM/SiPixelMonitorDigi/data/SiPixelMonitorDigi.cfi"
  
  include "DQM/SiPixelMonitorCluster/data/SiPixelMonitorCluster.cfi"
  replace SiPixelClusterSource.outputFile = "./DQMcluster_test.root"

  # include "DQM/SiPixelMonitorTrack/data/SiPixelMonitorTrackResiduals.cfi"

  service = PoolDBOutputService {
    untracked string logconnect = "sqlite_file:log.db"
    
    # # For SQLITE
    # string connect = "sqlite_file:./historic_test.db" 
   
    # For Development DataBase
    string connect = "oracle://cms_orcoff_int2r/CMS_COND_PIXEL"

    untracked string timetype = "runnumber"    
    # untracked string BlobStreamerName = "DefaultBlobStreamingService"    

    PSet DBParameters = {
      untracked string authenticationPath = "/afs/cern.ch/cms/DB/conddb"
      untracked int32 messageLevel = 3
      untracked int32 connectionTimeOut = 0
      untracked int32 connectionRetrialPeriod = 10
      untracked int32 connectionRetrialTimeOut = 60
      untracked bool  enableConnectionSharing = true
      untracked bool  enableReadOnlySessionOnUpdateConnection = false
      untracked bool  enablePoolAutomaticCleanUp = false
      untracked int32 idleConnectionCleanupPeriod = 10
    } 
    VPSet toPut = { 
      { string record = "SiPixelPerformanceSummaryRcd" string tag = "SiPixelPerformanceSummaryRcd_test" } 
    }    
  }
  module sipixelhistoricinfoEDAclient = SiPixelHistoricInfoEDAClient {
    untracked bool debug = true
    untracked bool writeHisto = true	
    untracked string outputDir = "."
  }
  # service = DaqMonitorROOTBackEnd {}
  # service = DQMShipMonitoring { untracked uint32 period = 1000 }

  service = DQMStore { 
   untracked string referenceFileName = ""
   untracked int32 verbose = 0
  }
  # service = DQM {
  #   untracked string collectorHost = "lxplus223.cern.ch"
  #   untracked int32 collectorPort = 9090
  #   untracked double publishFrequency = 5
  #   untracked bool debug = true 
  # }
  module preScaler  = Prescaler { int32 prescaleFactor = 1 }

  module dqmEnv = DQMEventInfo { # for P5
    untracked string eventInfoFolder = "EventInfo"
    untracked string subSystemFolder = "Pixel"
  }
  module dqmSaver = DQMFileSaver { # DQM online file saver module for P5
    untracked string dirName = "."
    untracked string fileName = "Pixel"
    untracked string environment = "Online"
    untracked int32 prescaleLS = 1
    untracked int32 prescaleEvt = -1
    untracked int32 prescaleTime = -1
    untracked bool saveAtRunEnd = true
    untracked bool saveAtJobEnd = false
  }
  service = ModuleWebRegistry {}
  service = LockService { 
    untracked vstring labels = { "source" } 
  }
  sequence rawMonitor = {
    SiPixelRawDataErrorSource
  }
  sequence digiMonitor = {
    SiPixelDigiSource
  }
  sequence cluMonitor = {
    # siPixelClusters,
    SiPixelClusterSource
  }
  sequence TRKlocalreco = {
    siPixelClusters,
    # siStripClusters,
    siPixelRecHits, 
    siStripMatchedRecHits
  } 
  sequence TRKlocalrec = {
    # siStripClusters,
    siPixelRecHits, 
    siStripMatchedRecHits
  } 
  sequence TRKckf = {
    globalMixedSeeds,
    # ckfTrackCandidates,
    # ctfAnalyticalTracks,
    ctfWithMaterialTracks
  }
  sequence TRKmonitor = {
    MonitorTrackGlobal,
    SiPixelMonitorTrackResiduals
  }
  sequence DQMmodules = {
    dqmEnv,
    dqmSaver
  }
  path p = { 
    siPixelDigis, 
    rawMonitor, 
    digiMonitor,
    # cluMonitor, 
    sipixelhistoricinfoEDAclient
    # DQMmodules 
  }
}
